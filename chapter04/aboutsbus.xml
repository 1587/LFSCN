<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="prepare-aboutsbus">
  <?dbhtml filename="aboutsbus.html"?>

  <title>关于SBU</title>

  <para>许多用户希望知道编译安装一个软件包最终会花费多少时间。因为LFS系统可以构建于多种系统中，所以不可能准确知道所需时间。最大的一个软件包（glibc）在最快的系统中仅仅花费20分钟，但在比较慢的系统上要花费3天！为了说明大概的时间，我们引入了SBU（Standard Build Unit）。</para>

  <para>SBU是这样工作的。在<xref linkend="chapter-temporary-tools"/>，第一个安装的包是 Binutils。编译这个包所花费的时间被叫做 SBU。其他的软件包的编译时间会根据这个来表示。</para>

  <para>例如，一个标记为4.5 SBUs的包，意味着，如果一个系统需要10分钟编译第一个软件包Binutils，那么这个软件包需要45分钟进行编译。幸运的是，绝大多数软件包进行编译时花费的时间比Binutils要少。</para>

  <para>通常，SBU所代表的时间并不是十分精确。它取决于很多因素，包括你的系统中GCC的版本。它们仅仅时给你一个大概的描述。一些情况下，会有一些误差。</para>

  <para>要了解某些具体的机器上的具体时间，可以登录 LinuxFromScratch SBU 主页，其位于 <ulink url="&lfs-root;~sbu/"/>。</para>

  <note><para>For many modern systems with multiple processors (or cores) the
  compilation time for a package can be reduced by performing a "parallel make"
  by either setting an environment variable or telling the
  <command>make</command> program how many processors are available.  For
  instance, a Core2Duo can support two simultaneous processes with:</para>

  <screen><userinput>export MAKEFLAGS='-j 2'</userinput></screen>

  <para>or just building with:</para>

  <screen><userinput>make -j2</userinput></screen>

  <para>When multiple processors are used in this way, the SBU units in the
  book will vary even more than they normally would.  Analyzing the output of
  the build process will also be more difficult because the lines of different
  processes will be interleaved.  If you run into a problem with a build step,
  revert back to a single processor build to properly analyze the error
  messages.</para>

  </note>

</sect1>

