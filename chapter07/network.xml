<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-scripts-network">
  <?dbhtml filename="network.html"?>

  <title>General Network Configuration</title>

  <indexterm zone="ch-scripts-network">
    <primary sortas="d-network">network</primary>
  <secondary>configuring</secondary></indexterm>

  <para>这一章节只当需要配置一个网卡的时候有用。</para>

  <para>如果不需要使用一个网卡，那么似乎不需要创建任何跟网卡相关的配置文件。如果真的是这样，请删除所有启动级别文件夹（<filename class="directory">/etc/rc.d/rc*.d</filename>）中的 <filename class="symlink">network</filename> 符号链接。 </para>

  <sect2>
    <title>给网络接口创建稳定的名称</title>

    <para>如果这个系统只需要设置一个网络接口，这一节是可选的，即时这永远也不会出错。在许多情况下（例如一个有无线接口和有线接口的笔记本电脑），实现本章的配置是很重要的。</para>  

    <para>通过 Udev 和网卡驱动模块，网络接口的编号再重启之后并不是不变的，因为这些驱动会同时加载，或者说是随机。例如，一个拥有两块分别由 Intel 和 Realtek 制造的网卡的电脑，Intel 网卡会标识为 <filename class="devicefile">eth0</filename>，Realtek 网卡会标识为  <filename class="devicefile">eth1</filename>。在某些情况下，重启之后他们的标识符会随机交换。为了避免这样， Udev 使用一个脚本和一些规则，根据网卡的硬件地址（MAC）来分配稳定的标识符。</para>

    <para>提前设定好规则来确保同样的设备分配到同样的标识符，首先：</para>

<screen><userinput>for NIC in /sys/class/net/* ; do
    INTERFACE=${NIC##*/} udevadm test --action=add $NIC
done</userinput></screen>

    <para>现在，查看 <filename>/etc/udev/rules.d/70-persistent-net.rules</filename> 文件，查看你的网络设备们被分配到了哪些标识符：</para>

<screen role="nodump"><userinput>cat /etc/udev/rules.d/70-persistent-net.rules</userinput></screen>

    <para>这个文件中，每个 NIC 由一行注释紧接两行内容表示。第一行是对硬件 ID 的描述（例如，它的 PCI 销售方和设备 ID，如果是一张 PCI 卡）。如果他的驱动程序可以找到，会写在圆括号中。硬件 ID 和驱动程序都不是如何分配标识符的标准，他们仅供参考。第二行是 Udev 用来匹配 NIC 的规则，以此来分配标识符。</para>

    <para>Udev 的所有规则由关键字，逗号，还有可选的空格组成。如下是这些关键字和其说明：</para>

    <itemizedlist>
      <listitem>
        <para><literal>SUBSYSTEM=="net"</literal> - 告诉 Udev 忽略不是网卡的设备。</para>
      </listitem>
      <listitem>
        <para><literal>ACTION=="add"</literal> - 告诉 Udev 忽略不是添加操作的 Udev 的事件（uevent）的发生（”删除“和“更改”事件依然会被触发，但是不需要重命名网卡标识符。</para>
      </listitem>
      <listitem>
        <para><literal>DRIVERS=="?*"</literal> - 如果这个存在，Udev 会忽略 VLAN 和 桥接的子接口（bridge sub-interface）（因为这些子接口没有相应的驱动程序）。这些子接口被分配时可能于他们的父设备发生冲突。</para>
      </listitem>
      <listitem>
        <para><literal>ATTR{address}</literal> - 这个值是 NIC 的硬件地址（MAC）。</para>
      </listitem>
      <listitem>
	      <para><literal>ATTR{type}=="1"</literal> - 这确保 Udev 在遇到一些会创建多个虚拟接口的无线网卡驱动程序的时候，能正确识别其主接口。次要的接口因为与 VLAN 桥接的子接口（bridge sub-interface）一样的原因被跳过：会造成名称冲突。</para>
      </listitem>
      <listitem>
        <para><literal>KERNEL=="eth*"</literal> - 这个关键字用来处理多个接口共用一个网卡地址（MAC）的机器（PS3 就是其中一个）。这些互不相关的接口有不同的基础名称，这个关键字允许 Udev 将他们分开处理。这同常对大多数 LFS 用户不怎么重要，但是没有害处。</para>
      </listitem>
      <listitem>
        <para><literal>NAME</literal> - 这个值是 Udev 将要给这个接口分配的标识符。</para>
      </listitem>
    </itemizedlist>

    <para><literal>NAME</literal> 的值非常重要。请确定你清楚哪个设备分配到了哪个标识符。确保使用正确的 <literal>NAME</literal> 的值创建下面的配置文件。</para>

  </sect2>

  <sect2>
    <title>创建网络接口配置文件</title>

    <para>哪个接口应该被网络启动脚本打开或关闭取决于<filename
    class="directory">/etc/sysconfig/</filename> 中的文件。这个文件夹中应该有相对每个被配置了的网络接口的文件。例如 <filename>ifconfig.xyz</filename>，其中 <quote>xyz</quote> 应该是你的设备标识符（例如 eth0）。这个文件中包含这个接口的一些属性，例如 IP 地址，子网掩码等等。确保这个文件以 <emphasis>ifconfig</emphasis> 开头，这点非常重要。</para>

    <para>下面的命令用于创建一个以 <emphasis>eth0</emphasis> 为标识符，使用静态 IP 地址的网络设备的示例配置文件：</para>

<screen><userinput>cd /etc/sysconfig/
cat &gt; ifconfig.eth0 &lt;&lt; "EOF"
<literal>ONBOOT=yes
IFACE=eth0
SERVICE=ipv4-static
IP=192.168.1.1
GATEWAY=192.168.1.2
PREFIX=24
BROADCAST=192.168.1.255</literal>
EOF</userinput></screen>

    <para>这些变量的值需要根据自己的需要进行更改以合乎要求。</para>

    <para>如果 <envar>ONBOOT</envar> 变量被设置为 <quote>yes</quote>，网络启动脚本会在系统启动时打开该接口。如果没有设置成 <quote>yes</quote>，这个 NIC 会被网络启动脚本忽略，亦即开机时不会自动开启这个接口。这个接口需要用户自己使用 <command>ifup</command> 和 <command>ifdown</command> 命令打开和关闭。</para>

    <para>变量 <envar>IFACE</envar> 定义了设备的标识符，例如，eth0。所有网络配置文件需要定义该变量。</para>

    <para>变量 <envar>SERVICE</envar> 设置用来获得 IP 地址的方法。LFS启动脚本包含一个模块化的 IP 分配格式。在 <filename
    class="directory">/lib/services/</filename> 文件夹中创建额外文件可以允许其他 IP 分配方法的启用。这通常用于 DHCP， 在 BLFS 中讲到。</para>

    <para>变量 <envar>GATEWAY</envar> 应该包含至少一个网关 IP。如果没有，请将这一行全部注释掉。</para>

    <para><envar>PREFIX</envar> 变量是子网中使用的位数（bit）。如果子网掩码是 255.255.255.0，那么它使用前面3个8位二进制位（bit），即24位（bit）。如果子网掩码是 255.255.255.240， 它使用了前面的28位（bit）。这个变量的值如果超过24，那么他通常是被 DSL 和 ISP 使用。在这个例子中（PREFIX=24)，子网掩码是 255.255.255.0。根据你的子网掩码调整变量 <envar>PREFIX</envar>的值。</para>

  </sect2>

  <sect2 id="resolv.conf">
    <title>创建/etc/resolv.conf文件</title>

    <indexterm zone="resolv.conf">
      <primary sortas="e-/etc/resolv.conf">/etc/resolv.conf</primary>
    </indexterm>

    <para>对于连接到互联网的系统，它需要 DNS 服务器来解析域名，该服务器的 IP 地址通常来自于你的网络服务运营商（ISP）或网络管理员。将 DNS 服务器的地址写入 <filename>/etc/resolv.conf</filename> 文件：</para>

<screen><userinput>cat &gt; /etc/resolv.conf &lt;&lt; "EOF"
<literal># Begin /etc/resolv.conf

domain <replaceable>&lt;你的域名&gt;</replaceable>
nameserver <replaceable>&lt;你的主要DNS服务器 IP 地址&gt;</replaceable>
nameserver <replaceable>&lt;你的次要DNS服务器 IP 地址&gt;</replaceable>

# End /etc/resolv.conf</literal>
EOF</userinput></screen>

    <para>这个 <varname>domain</varname> 可以省略或者替换成一个 <varname>search</varname> 声明。查看 resolv.conf 的 man 手册获取更多信息。</para>

    <para>将 <replaceable>&lt;你的DNS服务器&gt;</replaceable> 替换成合适的 DNS 服务器。一般会设置多个 DNS，用以充当备用胎。如果你只想设置一个 DNS，将第二行的 <emphasis>nameserver</emphasis> 删除。这个 IP 地址也可以是一个本地路由。</para>

    <note><para>Google的公共 IPv4 DNS 服务器地址是 8.8.8.8 和 8.8.4.4。</para></note>

  </sect2>

</sect1>
