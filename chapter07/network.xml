<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-scripts-network">
  <?dbhtml filename="network.html"?>

  <title>通用网络配置</title>

  <indexterm zone="ch-scripts-network">
    <primary sortas="d-network">网络</primary>
  <secondary>配置</secondary></indexterm>

  <para>本节仅在要配置网卡时应用。</para>

  <para>如果不会使用网卡，似乎就没有必要创建任何有关网卡的配置文件。在这种情况下就应该在<xref linkend="ch-scripts-bootscripts"/>中安装引导脚本之后从运行级别目录 (<filename class="directory">/etc/rc.d/rc*.d</filename>) 中移除所有的 <filename class="symlink">network</filename> 符号链接。</para>

  <sect2 id='stable-net-names'>
    <title>创建网络接口的稳定名称</title>

    <para>如果系统上只有一个网络接口，这一节就不是必须的，但是进行这些操作不会有什么错误。很多情况下 (例如有一台无线和一个有线接口的笔记本) 本节中的配置是必须的。</para>  

    <para>有了 Udev 和模块化网络驱动，每次重新引导系统之后网络接口的编号默认不是固定的，因为驱动并发加载，也就是说不计顺序。例如在一台有两块分别由 Intel 和 Realtek 生产的网卡的计算机上，Intel 生产的网卡可能会成为 <filename class="devicefile">eth0</filename> 而 Realtek 生产的成为 <filename class="devicefile">eth1</filename>。有些情况下重新引导之后网卡的重新编号就会颠倒。要防止这种现象产生，Udev 带有一个脚本和一些规则来按照 MAC 地址将网卡对应到稳定的名称。</para>

    <para>这些规则在上一章 <application>udev (systemd)</application> 的编制指令中已经生成了。检查 <filename>/etc/udev/rules.d/70-persistent-net.rules</filename> 这个文件查找名称和网络设备的对应：</para>

<screen role="nodump"><userinput>cat /etc/udev/rules.d/70-persistent-net.rules</userinput></screen>

    <note><para>在某些情况下，如手动给网卡或 Xen 等虚拟环境分配了 MAC 地址时，网络规则文件可能就不会生成，因为地址不是固定对应的。这种情况下直接跳到下一节。</para></note>

    <para>此文件以一个注释块开始，接下来每个 NIC 由两行组成。第一行是注释，显示其硬件 ID (例如 PCI 卡的生产商和设备 ID)，如果找到了驱动会写在括号中。硬件 ID 和驱动都不会用来确定接口的名称；这些信息仅供参考。第二行是 Udev 匹配此 NIC 并将其与一个名称实际对应的规则。</para>

    <para>所有的 Udev 规则都由几个关键字组成，以逗号和可选的空格隔开。此规则的关键字及其解释如下：</para>

    <itemizedlist>
      <listitem>
        <para><literal>SUBSYSTEM=="net"</literal> - 此项告诉 Udev 忽略不是网卡的设备。</para>
      </listitem>
      <listitem>
        <para><literal>ACTION=="add"</literal> - 此项告诉 Udev 对于非添加的 uevent ("移除" 和 "改变" 这两个 uevents 也会发生，但是无需重命名网络接口) 忽略此规则。</para>
      </listitem>
      <listitem>
        <para><literal>DRIVERS=="?*"</literal> - 此项存在时 Udev 会忽略 VLAN 或者子接口 (因为子接口没有驱动)。这些子接口要跳过是为了防止名称与其父设备冲突。</para>
      </listitem>
      <listitem>
        <para><literal>ATTR{address}</literal> - 此关键字的值是 NIC 的 MAC 地址。</para>
      </listitem>
      <listitem>
        <para><literal>ATTR{type}=="1"</literal> - 此项确保此规则对于某些创建多个虚拟接口的无线驱动只匹配首要接口。跳过次要接口的原因和 VLAN 以及子接口的原因相同：若不如此会出现冲突。</para>
      </listitem>
      <listitem>
        <para><literal>KERNEL=="eth*"</literal> - 此关键字添加到 Udev 规则创建器以处理具有多个网络接口而且有相同的 MAC 地址的情况 (例如 PS3).如果独立的接口有不同的基础名称，此关键字就将允许 Udev 区分它们。对于多数 LFS 用户而言此项并不必须然而无害。</para>
      </listitem>
      <listitem>
        <para><literal>NAME</literal> - 此关键字的值是 Udev 将会给此接口分配的名称。</para>
      </listitem>
    </itemizedlist>

    <para><literal>NAME</literal> 的值是最重要的部分。在继续之前要确保你知道每个网卡的名称，在创建以下配置文件时使用这个 <literal>NAME</literal> 值。</para>

  </sect2>

  <sect2>
    <title>Creating Network Interface Configuration Files</title>

    <para>Which interfaces are brought up and down by the network script
    depends on the files in <filename
    class="directory">/etc/sysconfig/</filename>.  This directory should
    contain a file for each interface to be configured, such as
    <filename>ifconfig.xyz</filename>, where <quote>xyz</quote> is
    meaningful to the administrator such as the device name (e.g. eth0).
    Inside this file are attributes to this interface, such as its IP
    address(es), subnet masks, and so forth.  It is necessary that 
    the stem of the filename be <emphasis>ifconfig</emphasis>.</para>

    <para>The following command creates a sample file for the
    <emphasis>eth0</emphasis> device with a static IP address:</para>

<screen><userinput>cd /etc/sysconfig/
cat &gt; ifconfig.eth0 &lt;&lt; "EOF"
<literal>ONBOOT=yes
IFACE=eth0
SERVICE=ipv4-static
IP=192.168.1.1
GATEWAY=192.168.1.2
PREFIX=24
BROADCAST=192.168.1.255</literal>
EOF</userinput></screen>

    <para>The values of these variables must be changed in every file to match
    the proper setup.</para>

    <para>If the <envar>ONBOOT</envar> variable is set to <quote>yes</quote> the
    network script will bring up the Network Interface Card (NIC) during
    booting of the system. If set to anything but <quote>yes</quote> the NIC
    will be ignored by the network script and not be automatically brought up.
    The interface can be manually started or stopped with the
    <command>ifup</command> and <command>ifdown</command> commands.</para>

    <para>The <envar>IFACE</envar> variable defines the interface name,
    for example, eth0.  It is required for all network device configuration 
    files. </para>

    <para>The <envar>SERVICE</envar> variable defines the method used for
    obtaining the IP address. The LFS-Bootscripts package has a modular IP
    assignment format, and creating additional files in the <filename
    class="directory">/lib/services/</filename> directory allows other IP
    assignment methods. This is commonly used for Dynamic Host Configuration
    Protocol (DHCP), which is addressed in the BLFS book.</para>

    <para>The <envar>GATEWAY</envar> variable should contain the default
    gateway IP address, if one is present. If not, then comment out the
    variable entirely.</para>

    <para>The <envar>PREFIX</envar> variable contains the number of
    bits used in the subnet. Each octet in an IP address is 8 bits. If the
    subnet's netmask is 255.255.255.0, then it is using the first three octets
    (24 bits) to specify the network number. If the netmask is 255.255.255.240,
    it would be using the first 28 bits.  Prefixes longer than 24 bits are
    commonly used by DSL and cable-based Internet Service Providers (ISPs).
    In this example (PREFIX=24), the netmask is 255.255.255.0. Adjust the
    <envar>PREFIX</envar> variable according to your specific subnet.i
    If omitted, the PREFIX defaults to 24.</para>

    <para>For more information see the <command>ifup</command> man page.</para>

  </sect2>

  <sect2 id="resolv.conf">
    <title>Creating the /etc/resolv.conf File</title>

    <indexterm zone="resolv.conf">
      <primary sortas="e-/etc/resolv.conf">/etc/resolv.conf</primary>
    </indexterm>

    <para>If the system is going to be connected to the Internet, it will
    need some means of Domain Name Service (DNS) name resolution to
    resolve Internet domain names to IP addresses, and vice versa. This is
    best achieved by placing the IP address of the DNS server, available
    from the ISP or network administrator, into
    <filename>/etc/resolv.conf</filename>. Create the file by running the
    following:</para>

<screen><userinput>cat &gt; /etc/resolv.conf &lt;&lt; "EOF"
<literal># Begin /etc/resolv.conf

domain <replaceable>&lt;Your Domain Name&gt;</replaceable>
nameserver <replaceable>&lt;IP address of your primary nameserver&gt;</replaceable>
nameserver <replaceable>&lt;IP address of your secondary nameserver&gt;</replaceable>

# End /etc/resolv.conf</literal>
EOF</userinput></screen>

    <para>The <varname>domain</varname> statement can be omitted
    or replaced with a <varname>search</varname> statement.  See the man page for
    resolv.conf for more details.</para>

    <para>Replace <replaceable>&lt;IP address of the nameserver&gt;</replaceable>
    with the IP address of the DNS most appropriate for the setup. There will
    often be more than one entry (requirements demand secondary servers for
    fallback capability). If you only need or want one DNS server, remove the
    second <emphasis>nameserver</emphasis> line from the file. The IP address
    may also be a router on the local network.</para>

    <note><para>The Google Public IPv4 DNS addresses are 8.8.8.8 and 8.8.4.4.</para></note>

  </sect2>

</sect1>
