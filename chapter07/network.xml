<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-scripts-network">
  <?dbhtml filename="network.html"?>

  <title>通用网络配置</title>

  <indexterm zone="ch-scripts-network">
    <primary sortas="d-network">network</primary>
  <secondary>configuring</secondary></indexterm>

  <para>这一章节仅在需要配置网卡的时候有用。</para>

  <para>如果不需要使用一个网卡，那么似乎不需要创建任何跟网卡相关的配置文件。如果真的是这样，请删除所有启动级别文件夹 (<filename
  class="directory">/etc/rc.d/rc*.d</filename>) 中的 <filename class="symlink">network</filename>符号链接.</para>

  <sect2>
    <title>给网络接口创建稳定的名称</title>

    <para>如果这个系统只需要设置一个网络接口，这一节是可选的，即时这永远也不会出错。在许多情况下 (例如一个有无线接口和有线接口的笔记本电脑)，完成本节的配置是很重要的。</para>  

    <para>通过 Udev 和网卡驱动模块，网络接口的编号在重启之后并不是不变的，因为这些驱动会并行加载，也就是说是顺序随机。例如，一个拥有两块分别由 Intel 和 Realtek 制造的网卡的电脑，Intel 网卡可能会成为 <filename class="devicefile">eth0</filename>，Realtek 网卡会成为<filename class="devicefile">eth1</filename>。在某些情况下，重启之后他们的标号会互换。为了避免这种情况，Udev 使用一个脚本和一些规则，根据网卡的 MAC 地址来分配稳定的名称。</para>

    <para>提前设定好规则来确保同一个设备分配到同一个名称，首先：</para>

<screen><userinput>for NIC in /sys/class/net/* ; do
    INTERFACE=${NIC##*/} udevadm test --action=add $NIC
done</userinput></screen>

    <para>现在，查看 <filename>/etc/udev/rules.d/70-persistent-net.rules</filename> 文件，查看你的网络设备们分别对应到哪些名称：</para>

<screen role="nodump"><userinput>cat /etc/udev/rules.d/70-persistent-net.rules</userinput></screen>

    <para>这个文件中，每个 NIC 由一行注释紧接两行内容表示。第一行是对硬件 ID 的描述 (例如，如果是一张 PCI 卡，它的 PCI 销售方和设备 ID)，如果他的驱动程序可以找到，会写在圆括号中。硬件 ID 和驱动程序都不是如何分配标识符的标准，他们仅供参考。第二行是 Udev 用来匹配 NIC 的规则，以此来分配标识符。</para>

    <para>Udev 的所有规则由关键字，由逗号和可选的空格隔开。如下是这些关键字和其说明：</para>

    <itemizedlist>
      <listitem>
        <para><literal>SUBSYSTEM=="net"</literal> - 此项告诉 Udev 忽略不是网卡的设备。</para>
      </listitem>
      <listitem>
        <para><literal>ACTION=="add"</literal> - 此项告诉 Udev 对非添加操作的 Udev 事件 (uevent) 忽略此规则 (“移除” 和 “改动” 事件依然会被触发，但是不需要重命名网卡接口)。</para>
      </listitem>
      <listitem>
        <para><literal>DRIVERS=="?*"</literal> - 此项存在使得 Udev 忽略 VLAN 或者桥接子接口 (因为这些子接口没有驱动)。这些子接口会被跳过以防名称与父设备冲突。</para>
      </listitem>
      <listitem>
        <para><literal>ATTR{address}</literal> - The value of this key is the
        NIC's MAC address.</para>
      </listitem>
      <listitem>
        <para><literal>ATTR{type}=="1"</literal> - This ensures the rule only
        matches the primary interface in the case of certain wireless drivers,
        which create multiple virtual interfaces. The secondary interfaces are
        skipped for the same reason that VLAN and bridge sub-interfaces are
        skipped: there would be a name collision otherwise.</para>
      </listitem>
      <listitem>
        <para><literal>KERNEL=="eth*"</literal> - This key was added to the
        Udev rule generator to handle machines that have multiple network
        interfaces, all with the same MAC address (the PS3 is one such
        machine).  If the independent interfaces have different basenames,
        this key will allow Udev to tell them apart.  This is generally not
        necessary for most Linux From Scratch users, but does not hurt.</para>
      </listitem>
      <listitem>
        <para><literal>NAME</literal> - The value of this key is the name that
        Udev will assign to this interface.</para>
      </listitem>
    </itemizedlist>

    <para>The value of <literal>NAME</literal> is the important part. Make sure
    you know which name has been assigned to each of your network cards before
    proceeding, and be sure to use that <literal>NAME</literal> value when
    creating your configuration files below.</para>

  </sect2>

  <sect2>
    <title>Creating Network Interface Configuration Files</title>

    <para>Which interfaces are brought up and down by the network script
    depends on the files in <filename
    class="directory">/etc/sysconfig/</filename>.  This directory should
    contain a file for each interface to be configured, such as
    <filename>ifconfig.xyz</filename>, where <quote>xyz</quote> is
    meaningful to the administrator such as the device name (e.g. eth0).
    Inside this file are attributes to this interface, such as its IP
    address(es), subnet masks, and so forth.  It is necessary that 
    the stem of the filename be <emphasis>ifconfig</emphasis>.</para>

    <para>The following command creates a sample file for the
    <emphasis>eth0</emphasis> device with a static IP address:</para>

<screen><userinput>cd /etc/sysconfig/
cat &gt; ifconfig.eth0 &lt;&lt; "EOF"
<literal>ONBOOT=yes
IFACE=eth0
SERVICE=ipv4-static
IP=192.168.1.1
GATEWAY=192.168.1.2
PREFIX=24
BROADCAST=192.168.1.255</literal>
EOF</userinput></screen>

    <para>The values of these variables must be changed in every file to match
    the proper setup.</para>

    <para>If the <envar>ONBOOT</envar> variable is set to <quote>yes</quote> the
    network script will bring up the Network Interface Card (NIC) during
    booting of the system. If set to anything but <quote>yes</quote> the NIC
    will be ignored by the network script and not be automatically brought up.
    The interface can be manually started or stopped with the
    <command>ifup</command> and <command>ifdown</command> commands.</para>

    <para>The <envar>IFACE</envar> variable defines the interface name,
    for example, eth0.  It is required for all network device configuration 
    files. </para>

    <para>The <envar>SERVICE</envar> variable defines the method used for
    obtaining the IP address. The LFS-Bootscripts package has a modular IP
    assignment format, and creating additional files in the <filename
    class="directory">/lib/services/</filename> directory allows other IP
    assignment methods. This is commonly used for Dynamic Host Configuration
    Protocol (DHCP), which is addressed in the BLFS book.</para>

    <para>The <envar>GATEWAY</envar> variable should contain the default
    gateway IP address, if one is present. If not, then comment out the
    variable entirely.</para>

    <para>The <envar>PREFIX</envar> variable containis the number of
    bits used in the subnet. Each octet in an IP address is 8 bits. If the
    subnet's netmask is 255.255.255.0, then it is using the first three octets
    (24 bits) to specify the network number. If the netmask is 255.255.255.240,
    it would be using the first 28 bits.  Prefixes longer than 24 bits are
    commonly used by DSL and cable-based Internet Service Providers (ISPs).
    In this example (PREFIX=24), the netmask is 255.255.255.0. Adjust the
    <envar>PREFIX</envar> variable according to your specific subnet.i
    If omitted, the PREFIX defaults to 24.</para>

    <para>For more information see the <command>ifup</command> man page.</para>

  </sect2>

  <sect2 id="resolv.conf">
    <title>Creating the /etc/resolv.conf File</title>

    <indexterm zone="resolv.conf">
      <primary sortas="e-/etc/resolv.conf">/etc/resolv.conf</primary>
    </indexterm>

    <para>If the system is going to be connected to the Internet, it will
    need some means of Domain Name Service (DNS) name resolution to
    resolve Internet domain names to IP addresses, and vice versa. This is
    best achieved by placing the IP address of the DNS server, available
    from the ISP or network administrator, into
    <filename>/etc/resolv.conf</filename>. Create the file by running the
    following:</para>

<screen><userinput>cat &gt; /etc/resolv.conf &lt;&lt; "EOF"
<literal># Begin /etc/resolv.conf

domain <replaceable>&lt;Your Domain Name&gt;</replaceable>
nameserver <replaceable>&lt;IP address of your primary nameserver&gt;</replaceable>
nameserver <replaceable>&lt;IP address of your secondary nameserver&gt;</replaceable>

# End /etc/resolv.conf</literal>
EOF</userinput></screen>

    <para>The <varname>domain</varname> statement can be omitted
    or replaced with a <varname>search</varname> statement.  See the man page for
    resolv.conf for more details.</para>

    <para>Replace <replaceable>&lt;IP address of the nameserver&gt;</replaceable>
    with the IP address of the DNS most appropriate for the setup. There will
    often be more than one entry (requirements demand secondary servers for
    fallback capability). If you only need or want one DNS server, remove the
    second <emphasis>nameserver</emphasis> line from the file. The IP address
    may also be a router on the local network.</para>

    <note><para>The Google Public IPv4 DNS addresses are 8.8.8.8 and 8.8.4.4.</para></note>

  </sect2>

</sect1>
