<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-createfiles">
  <?dbhtml filename="createfiles.html"?>

  <title>创建必要的文件和符号链接</title>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/etc/passwd">/etc/passwd</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/etc/group">/etc/group</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/run/utmp">/var/run/utmp</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/btmp">/var/log/btmp</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/lastlog">/var/log/lastlog</primary>
  </indexterm>

  <indexterm zone="ch-system-createfiles">
    <primary sortas="e-/var/log/wtmp">/var/log/wtmp</primary>
  </indexterm>

  <para>有些程序使用不可更改的路径指向现在还没有到位的程序。为了满足这些程序，创建一些符号链接，在本章中安装对应的软件之后它们会被真正的文件替代：</para>

<screen><userinput>ln -sv /tools/bin/{bash,cat,echo,pwd,stty} /bin
ln -sv /tools/bin/perl /usr/bin
ln -sv /tools/lib/libgcc_s.so{,.1} /usr/lib
ln -sv /tools/lib/libstdc++.so{,.6} /usr/lib
sed 's/tools/usr/' /tools/lib/libstdc++.la > /usr/lib/libstdc++.la
ln -sv bash /bin/sh</userinput></screen>

  <para>正确的 Linux 系统在 <filename>/etc/mtab</filename> 文件中维护一个列表，列出挂载的文件系统。通常它会在我们挂载新的文件系统的时候创建。因为我们不会在 chroot 环境中挂载任何文件系统，创建一个空文件供要求 <filename>/etc/mtab</filename> 存在的工具使用：</para>

<screen><userinput>touch /etc/mtab</userinput></screen>

  <para>为了让 <systemitem class="username">root</systemitem> 用户能够登录并且要 <quote>root</quote> 这个名字被识别，在 <filename>/etc/passwd</filename> 和 <filename>/etc/group</filename> 这两个文件中就要有对应的条目存在。</para>

  <para>运行一下命令创建 <filename>/etc/passwd</filename> 文件：</para>

<screen><userinput>cat &gt; /etc/passwd &lt;&lt; "EOF"
<literal>root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
nobody:x:99:99:Unprivileged User:/dev/null:/bin/false</literal>
EOF</userinput></screen>

  <para><systemitem class="username">root</systemitem> 用户的实际密码 (这里的 <quote>x</quote> 只用作占位符) 稍后再设置。</para>

  <para>运行以下命令创建 <filename>/etc/group</filename> 文件：</para>

<screen><userinput>cat &gt; /etc/group &lt;&lt; "EOF"
<literal>root:x:0:
bin:x:1:
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:
video:x:12:
utmp:x:13:
usb:x:14:
cdrom:x:15:
mail:x:34:
nogroup:x:99:</literal>
EOF</userinput></screen>

  <para>创建的组并不是任何标准的一部分&mdash;&mdash;它们一部分是本章中 Udev 配置的要求，另一部分是一些已有发行版的惯例。Linux 基础标准 (LSB，位于 <ulink url="http://www.linuxbase.org"/>) 只推荐 <systemitem class="groupname">root</systemitem> 组的 ID 为 0 并且 <systemitem class="groupname">bin</systemitem> 组的 ID 为 1。所有其他组的名称和 ID 都可以由系统管理员自由选择，因为写得好的程序会使用组的名字而不是 ID。</para>

  <para>要移除 <quote>I have no name!</quote> 这个提示符，启动一个新的prompt, start a new
  shell. Since a full Glibc was installed in <xref
  linkend="chapter-temporary-tools"/> and the
  <filename>/etc/passwd</filename> and <filename>/etc/group</filename>
  files have been created, user name and group name resolution will now
  work:</para>

<screen role="nodump"><userinput>exec /tools/bin/bash --login +h</userinput></screen>

  <para>Note the use of the <parameter>+h</parameter> directive. This tells
  <command>bash</command> not to use its internal path hashing. Without this
  directive, <command>bash</command> would remember the paths to binaries it has
  executed. To ensure the use of the newly compiled binaries as soon as they are
  installed, the <parameter>+h</parameter> directive will be used for the duration
  of this chapter.</para>

  <para>The <command>login</command>, <command>agetty</command>, and
  <command>init</command> programs (and others) use a number of log
  files to record information such as who was logged into the system and
  when. However, these programs will not write to the log files if they
  do not already exist. Initialize the log files and give them
  proper permissions:</para>

<screen><userinput>touch /var/log/{btmp,lastlog,wtmp}
chgrp -v utmp /var/log/lastlog
chmod -v 664  /var/log/lastlog
chmod -v 600  /var/log/btmp</userinput></screen>

  <para>The <filename>/var/log/wtmp</filename> file records all logins and
  logouts. The <filename>/var/log/lastlog</filename> file records when each
  user last logged in. The <filename>/var/log/btmp</filename> file records the
  bad login attempts.</para>

  <note><para>The <filename>/run/utmp</filename> file records the users that
  are currently logged in.  This file is created dynamically in the boot
  scripts.</para></note>

</sect1>
